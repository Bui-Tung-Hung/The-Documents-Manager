version: '3.8'

services:
  # Document Search API
  document-search-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8001:8001"
    environment:
      # Vector Database Configuration
      - QDRANT_URL=${QDRANT_URL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - QDRANT_COLLECTION=${QDRANT_COLLECTION:-TestCollection6}
      
      # Embedding Configuration
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-ollama}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-bge-m3}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://localhost:11434}
      
      # Chat Configuration
      - CHAT_PROVIDER=${CHAT_PROVIDER:-ollama}
      - CHAT_MODEL=${CHAT_MODEL:-qwen2.5:1.5B}
      - CHAT_BASE_URL=${CHAT_BASE_URL:-http://localhost:11434}
      - CHAT_CONTEXT_LIMIT=${CHAT_CONTEXT_LIMIT:-3000}
      - CHAT_MAX_CHUNKS=${CHAT_MAX_CHUNKS:-5}
      
      # API Configuration
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8001}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    volumes:
      # Mount custom config if needed
      - ./config:/app/config:ro
      # Mount data directory for persistence
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Local Qdrant (optional - for development)
  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6333:6333"
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped
    profiles:
      - local

  # Ollama (optional - for local embeddings)
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    restart: unless-stopped
    profiles:
      - local

volumes:
  qdrant_storage:
  ollama_models:
